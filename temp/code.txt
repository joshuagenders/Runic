using System;
using System.Collections.Generic;
using System.Linq;

namespace GenerateData
{
    public enum Locale
    {
        AU = 0,
        CA = 1,
        DK = 2,
        ES = 3,
        IE = 4,
        IT = 5,
        NO = 6,
        NZ = 7,
        UK = 8
    }

    public class RealAddress
    {
        public string AddressL1 { get; set; }
        public string City { get; set; }
        public string State { get; set; }
        public string Postcode { get; set; }
    }

    public static class Data
    {
        private static Locale _locale { get; set; }
        private static Func<string> _address { get; set; }
        private static Func<List<RealAddress>> _getRealAddresses { get; set; }
        private static Func<string> _phoneNumber { get; set; }
        private static Func<string> _businessName { get; set; }

        public static Locale SetLocale {
            get
            {
                return _locale;
            }
            set
            {
                _locale = value;
                SetupFuncs();
            }
        }

        private static void SetupFuncs()
        {
            _businessName = () => "";
            switch (_locale)
            {
                case Locale.CA:
                    _address = () => "";
                    _getRealAddresses = () => new [] { new RealAddress() }.ToList();
                    _phoneNumber = () => "";
                    break;
                case Locale.AU:
                    _address = () => "a";
                    _getRealAddresses = () => new[] { new RealAddress() }.ToList();
                    _phoneNumber = () => "";
                    break;
                case Locale.UK:
                    _address = () => "b";
                    _getRealAddresses = () => new[] { new RealAddress() }.ToList();
                    _phoneNumber = () => "";
                    break;
                default:
                    _address = () => "c";
                    _getRealAddresses = () => new[] { new RealAddress() }.ToList();
                    _phoneNumber = () => "";
                    break;
            }
        }

        public static string Address() => _address();
        public static RealAddress RealAddress() => _getRealAddresses().GetRandom();
        public static RealAddress RealAddressMatching(string postcode) => _getRealAddresses().Where(a => a.Postcode == postcode).GetRandom();
        public static string PhoneNumber() => _phoneNumber();
        public static string BusinessName()=>_businessName();
        public static T GetRandom<T>(this IEnumerable<T> list) => list.ElementAt(new Random(DateTime.Now.Millisecond).Next(list.Count()));
    }
}
